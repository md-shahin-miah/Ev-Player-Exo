// Generated by view binder compiler. Do not edit!
package com.lasuak.kvplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.lasuak.kvplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailsBottomsheetDialogBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialButton btnOk;

  @NonNull
  public final Guideline dialogGuideline;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtDateLabel;

  @NonNull
  public final TextView txtDialogTitle;

  @NonNull
  public final TextView txtDuration;

  @NonNull
  public final TextView txtDurationLabel;

  @NonNull
  public final TextView txtFormat;

  @NonNull
  public final TextView txtFormatLabel;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtNameLabel;

  @NonNull
  public final TextView txtPath;

  @NonNull
  public final TextView txtPathLabel;

  @NonNull
  public final TextView txtResolution;

  @NonNull
  public final TextView txtResolutionLabel;

  @NonNull
  public final TextView txtSize;

  @NonNull
  public final TextView txtSizeLabel;

  private DetailsBottomsheetDialogBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialButton btnOk, @NonNull Guideline dialogGuideline, @NonNull TextView txtDate,
      @NonNull TextView txtDateLabel, @NonNull TextView txtDialogTitle,
      @NonNull TextView txtDuration, @NonNull TextView txtDurationLabel,
      @NonNull TextView txtFormat, @NonNull TextView txtFormatLabel, @NonNull TextView txtName,
      @NonNull TextView txtNameLabel, @NonNull TextView txtPath, @NonNull TextView txtPathLabel,
      @NonNull TextView txtResolution, @NonNull TextView txtResolutionLabel,
      @NonNull TextView txtSize, @NonNull TextView txtSizeLabel) {
    this.rootView = rootView;
    this.btnOk = btnOk;
    this.dialogGuideline = dialogGuideline;
    this.txtDate = txtDate;
    this.txtDateLabel = txtDateLabel;
    this.txtDialogTitle = txtDialogTitle;
    this.txtDuration = txtDuration;
    this.txtDurationLabel = txtDurationLabel;
    this.txtFormat = txtFormat;
    this.txtFormatLabel = txtFormatLabel;
    this.txtName = txtName;
    this.txtNameLabel = txtNameLabel;
    this.txtPath = txtPath;
    this.txtPathLabel = txtPathLabel;
    this.txtResolution = txtResolution;
    this.txtResolutionLabel = txtResolutionLabel;
    this.txtSize = txtSize;
    this.txtSizeLabel = txtSizeLabel;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailsBottomsheetDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailsBottomsheetDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.details_bottomsheet_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailsBottomsheetDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_ok;
      MaterialButton btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.dialog_guideline;
      Guideline dialogGuideline = ViewBindings.findChildViewById(rootView, id);
      if (dialogGuideline == null) {
        break missingId;
      }

      id = R.id.txt_date;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txt_date_label;
      TextView txtDateLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtDateLabel == null) {
        break missingId;
      }

      id = R.id.txt_dialog_title;
      TextView txtDialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtDialogTitle == null) {
        break missingId;
      }

      id = R.id.txt_duration;
      TextView txtDuration = ViewBindings.findChildViewById(rootView, id);
      if (txtDuration == null) {
        break missingId;
      }

      id = R.id.txt_duration_label;
      TextView txtDurationLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtDurationLabel == null) {
        break missingId;
      }

      id = R.id.txt_format;
      TextView txtFormat = ViewBindings.findChildViewById(rootView, id);
      if (txtFormat == null) {
        break missingId;
      }

      id = R.id.txt_format_label;
      TextView txtFormatLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtFormatLabel == null) {
        break missingId;
      }

      id = R.id.txt_name;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_name_label;
      TextView txtNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtNameLabel == null) {
        break missingId;
      }

      id = R.id.txt_path;
      TextView txtPath = ViewBindings.findChildViewById(rootView, id);
      if (txtPath == null) {
        break missingId;
      }

      id = R.id.txt_path_label;
      TextView txtPathLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtPathLabel == null) {
        break missingId;
      }

      id = R.id.txt_resolution;
      TextView txtResolution = ViewBindings.findChildViewById(rootView, id);
      if (txtResolution == null) {
        break missingId;
      }

      id = R.id.txt_resolution_label;
      TextView txtResolutionLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtResolutionLabel == null) {
        break missingId;
      }

      id = R.id.txt_size;
      TextView txtSize = ViewBindings.findChildViewById(rootView, id);
      if (txtSize == null) {
        break missingId;
      }

      id = R.id.txt_size_label;
      TextView txtSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtSizeLabel == null) {
        break missingId;
      }

      return new DetailsBottomsheetDialogBinding((NestedScrollView) rootView, btnOk,
          dialogGuideline, txtDate, txtDateLabel, txtDialogTitle, txtDuration, txtDurationLabel,
          txtFormat, txtFormatLabel, txtName, txtNameLabel, txtPath, txtPathLabel, txtResolution,
          txtResolutionLabel, txtSize, txtSizeLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
