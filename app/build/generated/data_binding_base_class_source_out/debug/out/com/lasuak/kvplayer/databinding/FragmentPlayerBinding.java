// Generated by view binder compiler. Do not edit!
package com.lasuak.kvplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.exoplayer2.ui.StyledPlayerView;
import com.lasuak.kvplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlayerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnAudioTrack;

  @NonNull
  public final TextView btnBackName;

  @NonNull
  public final ImageView btnLock;

  @NonNull
  public final ImageButton btnMute;

  @NonNull
  public final ImageButton btnNext;

  @NonNull
  public final ImageButton btnPrev;

  @NonNull
  public final ImageButton btnScreenRotation;

  @NonNull
  public final LinearLayout exoCenterControls;

  @NonNull
  public final ImageButton exoFullscreen;

  @NonNull
  public final ImageButton exoPlayPause;

  @NonNull
  public final ImageView exoSubtitle;

  @NonNull
  public final SeekBar seekBarBrightness;

  @NonNull
  public final SeekBar seekBarVolume;

  @NonNull
  public final TextView txtBrightness;

  @NonNull
  public final TextView txtVolume;

  @NonNull
  public final StyledPlayerView videoView;

  private FragmentPlayerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnAudioTrack, @NonNull TextView btnBackName, @NonNull ImageView btnLock,
      @NonNull ImageButton btnMute, @NonNull ImageButton btnNext, @NonNull ImageButton btnPrev,
      @NonNull ImageButton btnScreenRotation, @NonNull LinearLayout exoCenterControls,
      @NonNull ImageButton exoFullscreen, @NonNull ImageButton exoPlayPause,
      @NonNull ImageView exoSubtitle, @NonNull SeekBar seekBarBrightness,
      @NonNull SeekBar seekBarVolume, @NonNull TextView txtBrightness, @NonNull TextView txtVolume,
      @NonNull StyledPlayerView videoView) {
    this.rootView = rootView;
    this.btnAudioTrack = btnAudioTrack;
    this.btnBackName = btnBackName;
    this.btnLock = btnLock;
    this.btnMute = btnMute;
    this.btnNext = btnNext;
    this.btnPrev = btnPrev;
    this.btnScreenRotation = btnScreenRotation;
    this.exoCenterControls = exoCenterControls;
    this.exoFullscreen = exoFullscreen;
    this.exoPlayPause = exoPlayPause;
    this.exoSubtitle = exoSubtitle;
    this.seekBarBrightness = seekBarBrightness;
    this.seekBarVolume = seekBarVolume;
    this.txtBrightness = txtBrightness;
    this.txtVolume = txtVolume;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_audio_track;
      ImageButton btnAudioTrack = ViewBindings.findChildViewById(rootView, id);
      if (btnAudioTrack == null) {
        break missingId;
      }

      id = R.id.btn_back_name;
      TextView btnBackName = ViewBindings.findChildViewById(rootView, id);
      if (btnBackName == null) {
        break missingId;
      }

      id = R.id.btn_lock;
      ImageView btnLock = ViewBindings.findChildViewById(rootView, id);
      if (btnLock == null) {
        break missingId;
      }

      id = R.id.btn_mute;
      ImageButton btnMute = ViewBindings.findChildViewById(rootView, id);
      if (btnMute == null) {
        break missingId;
      }

      id = R.id.btn_next;
      ImageButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btn_prev;
      ImageButton btnPrev = ViewBindings.findChildViewById(rootView, id);
      if (btnPrev == null) {
        break missingId;
      }

      id = R.id.btn_screen_rotation;
      ImageButton btnScreenRotation = ViewBindings.findChildViewById(rootView, id);
      if (btnScreenRotation == null) {
        break missingId;
      }

      id = R.id.exo_center_controls;
      LinearLayout exoCenterControls = ViewBindings.findChildViewById(rootView, id);
      if (exoCenterControls == null) {
        break missingId;
      }

      id = R.id.exo_fullscreen;
      ImageButton exoFullscreen = ViewBindings.findChildViewById(rootView, id);
      if (exoFullscreen == null) {
        break missingId;
      }

      id = R.id.exo_play_pause;
      ImageButton exoPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (exoPlayPause == null) {
        break missingId;
      }

      id = R.id.exo_subtitle;
      ImageView exoSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (exoSubtitle == null) {
        break missingId;
      }

      id = R.id.seekBarBrightness;
      SeekBar seekBarBrightness = ViewBindings.findChildViewById(rootView, id);
      if (seekBarBrightness == null) {
        break missingId;
      }

      id = R.id.seekBarVolume;
      SeekBar seekBarVolume = ViewBindings.findChildViewById(rootView, id);
      if (seekBarVolume == null) {
        break missingId;
      }

      id = R.id.txt_brightness;
      TextView txtBrightness = ViewBindings.findChildViewById(rootView, id);
      if (txtBrightness == null) {
        break missingId;
      }

      id = R.id.txt_volume;
      TextView txtVolume = ViewBindings.findChildViewById(rootView, id);
      if (txtVolume == null) {
        break missingId;
      }

      id = R.id.videoView;
      StyledPlayerView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new FragmentPlayerBinding((ConstraintLayout) rootView, btnAudioTrack, btnBackName,
          btnLock, btnMute, btnNext, btnPrev, btnScreenRotation, exoCenterControls, exoFullscreen,
          exoPlayPause, exoSubtitle, seekBarBrightness, seekBarVolume, txtBrightness, txtVolume,
          videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
